//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Section06_L19
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OrganizationEntities : DbContext
    {
        public OrganizationEntities()
            : base("name=OrganizationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<SalaryInfo> SalaryInfoes { get; set; }
    
        public virtual ObjectResult<Department> GetAllTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Department>("GetAllTables");
        }
    
        public virtual ObjectResult<Department> GetAllTables(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Department>("GetAllTables", mergeOption);
        }
    
        public virtual int DepartmentInsert(string name, string hOD, string gender)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var hODParameter = hOD != null ?
                new ObjectParameter("HOD", hOD) :
                new ObjectParameter("HOD", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DepartmentInsert", nameParameter, hODParameter, genderParameter);
        }
    
        public virtual int DepartmentUpdate(Nullable<int> id, string name, string hOD, string gender)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var hODParameter = hOD != null ?
                new ObjectParameter("HOD", hOD) :
                new ObjectParameter("HOD", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DepartmentUpdate", idParameter, nameParameter, hODParameter, genderParameter);
        }
    }
}
